exit
deadline(set_service_order)
exit
deadline(set_service_order)
deadline(set_serivce_order)
deadline
distance_price(set_service_order)
deadline(set_service_order)
deadlines.find do |d| return d end
deadlines.find do |d|
deadlines.find do |d| return d
exit
deadline
d
exit
set_service_order.order_distance.between?(transport.distance.min_distance, transport.distance.max_distance)
distance_price(set_service_order)
deadline(set_service_order)
deadline
deadlines.each do |d| return d end
deadlines.each do |d|
deadlines.each do |d| if set_service_order.order_distance.between?(d.min_distance, d.max_distance) I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short) end
deadlines.each do |d| if set_service_order.order_distance.between?(d.min_distance, d.max_distance) return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short) end
deadlines.each do |d| if set_service_order.order_distance.between?(d.min_distance, d.max_distance) return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short) end end
exit
rails s
exit
weight_price
transport.deadline
d.time
exit
deadlines.each do |d| return d end 
deadlines.each do |d|
    end
      return d
deadlines.each do |d|
exit
set_service_order.updated_at + d.time * 3600
if d.min_distance <= set_service_order.order_distance && d.max_distance >= set_service_order.order_distance
exit
deadlines.each do |d| d end
deadlines.each do |d|
      end
        return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short)
      if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
   deadlines.each do |d|
      end
        return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short)
      if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
    deadlines.each do |d|
    end
      end
        return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short)
      if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
 deadlines.each do |d|
      end
        return I18n.localize((set_service_order.updated_at + d.time * 3600), format: :short)
      if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
deadlines.each do |d|
set_service_order.updated_at + d.time * 3600
set_service_order.order_distance.between?(d.min_distance, d.max_distance)
exit
set_service_order.order_distance.between?(d.min_distance, d.max_distance)
exit
d
   38:         d
   37:       if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
deadline = deadlines.find do |d|
   39:       end
   38:         d
   37:       if set_service_order.order_distance.between?(d.min_distance, d.max_distance)
deadline = deadlines.find do |d|
exit
weight_prices.find_by("min_weight <= :order_weight AND max_weight >= :order_weight", order_weight: set_service_order.order_weight)&.value_km.to_f * set_service_order.order_distance
weight_prices.find_by("min_weight >= :order_weight AND max_weight <= :order_weight", order_weight: set_service_order.order_weight)&.value_km.to_f * set_service_order.order_distance
weight_prices
exit
weight_prices
      end
        dp.value_km
      if set_service_order.order_distance.between?(dp.min_distance, dp.max_distance)
distance_prices.find do |dp|
distance_prices.first
set_service_order.order_distance
distance_prices.count
continue
exit
distance_prices.count
exit
s.transport.distance_price(@service_order)
s.transport.distance_price(@service_order)~
s.transport.weight_price(@service_order)
s.transport.weight_price(@service_order)1~
s.transport.weight_price(@service_order) + s.transport.distance_price(@service_order) + s.transport.fee
s.transport.fee
